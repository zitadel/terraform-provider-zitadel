package org_idp_github

import (
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func schemaAttributes(isResourceNotDatasource bool) map[string]tfsdk.Attribute {
	id := tfsdk.Attribute{
		Type:        types.StringType,
		Required:    !isResourceNotDatasource,
		Computed:    isResourceNotDatasource,
		Description: "The providers ID",
	}
	if isResourceNotDatasource {
		// On updates, this computed field doesn't change. So plans should not print -> known after apply
		id.PlanModifiers = tfsdk.AttributePlanModifiers{resource.UseStateForUnknown()}
	}
	orgID := tfsdk.Attribute{
		Type:        types.StringType,
		Required:    true,
		Description: "The organizations ID",
	}
	if isResourceNotDatasource {
		// When the resource is moved to another organization,
		// we have to delete it in the old organization and recreated in the new organization
		orgID.PlanModifiers = tfsdk.AttributePlanModifiers{resource.RequiresReplace()}
	}

	attributes := map[string]tfsdk.Attribute{
		"id":     id,
		"org_id": orgID,
		"name": {
			Type:        types.StringType,
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "Name of the IDP",
		},
		"client_id": {
			Type:        types.StringType,
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "client id generated by the identity provider",
			Sensitive:   true,
		},
		"scopes": {
			Type: types.SetType{
				ElemType: types.StringType,
			},
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "the scopes requested by ZITADEL during the request on the identity provider",
		},
		"is_linking_allowed": {
			Type:        types.BoolType,
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "enable if users should be able to link an existing ZITADEL user with an external account",
		},
		"is_creation_allowed": {
			Type:        types.BoolType,
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "enable if users should be able to create a new account in ZITADEL when using an external account",
		},
		"is_auto_creation": {
			Type:        types.BoolType,
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "enable if a new account in ZITADEL should be created automatically when login with an external account",
		},
		"is_auto_update": {
			Type:        types.BoolType,
			Required:    isResourceNotDatasource,
			Computed:    !isResourceNotDatasource,
			Description: "enable if a the ZITADEL account fields should be updated automatically on each login",
		},
	}
	if isResourceNotDatasource {
		// The client secret can only be set, not read from the ZITADEL API
		attributes["client_secret"] = tfsdk.Attribute{
			Type:        types.StringType,
			Required:    true,
			Description: "client secret generated by the identity provider",
			Sensitive:   true,
		}
	}
	return attributes
}
